{
  "results": {
    "group_ehrshot_new_diagnosis_tasks_gu": {
      "exact_match,binary_yn": 0.9567013585445301,
      "exact_match_stderr,binary_yn": 0.0017826892429844347,
      "f1_gu_yn,binary_yn": 0.06208202448817392,
      "f1_gu_yn_stderr,binary_yn": "N/A",
      "recall_gu_yn,binary_yn": 0.0771875812544219,
      "recall_gu_yn_stderr,binary_yn": "N/A",
      "alias": "group_ehrshot_new_diagnosis_tasks_gu"
    },
    "ehrshot_new_diagnosis_acute_myocardial_infarction_gu": {
      "alias": " - ehrshot_new_diagnosis_acute_myocardial_infarction_gu",
      "exact_match,binary_yn": 0.9369501466275659,
      "exact_match_stderr,binary_yn": 0.009313796105166649,
      "f1_gu_yn,binary_yn": 0.044444444444444446,
      "f1_gu_yn_stderr,binary_yn": "N/A",
      "recall_gu_yn,binary_yn": 0.05555555555555555,
      "recall_gu_yn_stderr,binary_yn": "N/A"
    },
    "ehrshot_new_diagnosis_asthma_gu": {
      "alias": " - ehrshot_new_diagnosis_asthma_gu",
      "exact_match,binary_yn": 0.9709677419354839,
      "exact_match_stderr,binary_yn": 0.006748348216037521,
      "f1_gu_yn,binary_yn": 0.0,
      "f1_gu_yn_stderr,binary_yn": "N/A",
      "recall_gu_yn,binary_yn": 0.0,
      "recall_gu_yn_stderr,binary_yn": "N/A"
    },
    "ehrshot_new_diagnosis_breast_cancer_gu": {
      "alias": " - ehrshot_new_diagnosis_breast_cancer_gu",
      "exact_match,binary_yn": 0.9898697539797395,
      "exact_match_stderr,binary_yn": 0.003812189476226434,
      "f1_gu_yn,binary_yn": 0.0,
      "f1_gu_yn_stderr,binary_yn": "N/A",
      "recall_gu_yn,binary_yn": 0.0,
      "recall_gu_yn_stderr,binary_yn": "N/A"
    },
    "ehrshot_new_diagnosis_chronic_kidney_disease_gu": {
      "alias": " - ehrshot_new_diagnosis_chronic_kidney_disease_gu",
      "exact_match,binary_yn": 0.8907849829351536,
      "exact_match_stderr,binary_yn": 0.012895841581944897,
      "f1_gu_yn,binary_yn": 0.058823529411764705,
      "f1_gu_yn_stderr,binary_yn": "N/A",
      "recall_gu_yn,binary_yn": 0.08695652173913043,
      "recall_gu_yn_stderr,binary_yn": "N/A"
    },
    "ehrshot_new_diagnosis_chronic_obstructive_pulmonary_disease_gu": {
      "alias": " - ehrshot_new_diagnosis_chronic_obstructive_pulmonary_disease_gu",
      "exact_match,binary_yn": 0.9847328244274809,
      "exact_match_stderr,binary_yn": 0.00479457021549486,
      "f1_gu_yn,binary_yn": 0.0,
      "f1_gu_yn_stderr,binary_yn": "N/A",
      "recall_gu_yn,binary_yn": 0.0,
      "recall_gu_yn_stderr,binary_yn": "N/A"
    },
    "ehrshot_new_diagnosis_coronary_arteriosclerosis_gu": {
      "alias": " - ehrshot_new_diagnosis_coronary_arteriosclerosis_gu",
      "exact_match,binary_yn": 0.8975206611570248,
      "exact_match_stderr,binary_yn": 0.01234019196248574,
      "f1_gu_yn,binary_yn": 0.03125,
      "f1_gu_yn_stderr,binary_yn": "N/A",
      "recall_gu_yn,binary_yn": 0.0625,
      "recall_gu_yn_stderr,binary_yn": "N/A"
    },
    "ehrshot_new_diagnosis_dementia_gu": {
      "alias": " - ehrshot_new_diagnosis_dementia_gu",
      "exact_match,binary_yn": 0.9859550561797753,
      "exact_match_stderr,binary_yn": 0.0044132015502447094,
      "f1_gu_yn,binary_yn": 0.0,
      "f1_gu_yn_stderr,binary_yn": "N/A",
      "recall_gu_yn,binary_yn": 0.0,
      "recall_gu_yn_stderr,binary_yn": "N/A"
    },
    "ehrshot_new_diagnosis_depressive_disorder_gu": {
      "alias": " - ehrshot_new_diagnosis_depressive_disorder_gu",
      "exact_match,binary_yn": 0.9467353951890034,
      "exact_match_stderr,binary_yn": 0.009316345701017636,
      "f1_gu_yn,binary_yn": 0.20512820512820512,
      "f1_gu_yn_stderr,binary_yn": "N/A",
      "recall_gu_yn,binary_yn": 0.17391304347826086,
      "recall_gu_yn_stderr,binary_yn": "N/A"
    },
    "ehrshot_new_diagnosis_heart_failure_gu": {
      "alias": " - ehrshot_new_diagnosis_heart_failure_gu",
      "exact_match,binary_yn": 0.9319286871961102,
      "exact_match_stderr,binary_yn": 0.010148060493558186,
      "f1_gu_yn,binary_yn": 0.16,
      "f1_gu_yn_stderr,binary_yn": "N/A",
      "recall_gu_yn,binary_yn": 0.2222222222222222,
      "recall_gu_yn_stderr,binary_yn": "N/A"
    },
    "ehrshot_new_diagnosis_hyperlipidemia_gu": {
      "alias": " - ehrshot_new_diagnosis_hyperlipidemia_gu",
      "exact_match,binary_yn": 0.9055690072639225,
      "exact_match_stderr,binary_yn": 0.014406863617343297,
      "f1_gu_yn,binary_yn": 0.09302325581395349,
      "f1_gu_yn_stderr,binary_yn": "N/A",
      "recall_gu_yn,binary_yn": 0.06060606060606061,
      "recall_gu_yn_stderr,binary_yn": "N/A"
    },
    "ehrshot_new_diagnosis_hypertension_gu": {
      "alias": " - ehrshot_new_diagnosis_hypertension_gu",
      "exact_match,binary_yn": 0.903485254691689,
      "exact_match_stderr,binary_yn": 0.015310377502350174,
      "f1_gu_yn,binary_yn": 0.05263157894736842,
      "f1_gu_yn_stderr,binary_yn": "N/A",
      "recall_gu_yn,binary_yn": 0.03225806451612903,
      "recall_gu_yn_stderr,binary_yn": "N/A"
    },
    "ehrshot_new_diagnosis_intestinal_cancer_gu": {
      "alias": " - ehrshot_new_diagnosis_intestinal_cancer_gu",
      "exact_match,binary_yn": 0.9914163090128756,
      "exact_match_stderr,binary_yn": 0.0034917034775331915,
      "f1_gu_yn,binary_yn": 0.0,
      "f1_gu_yn_stderr,binary_yn": "N/A",
      "recall_gu_yn,binary_yn": 0.0,
      "recall_gu_yn_stderr,binary_yn": "N/A"
    },
    "ehrshot_new_diagnosis_ischemic_stroke_gu": {
      "alias": " - ehrshot_new_diagnosis_ischemic_stroke_gu",
      "exact_match,binary_yn": 0.883453237410072,
      "exact_match_stderr,binary_yn": 0.012180416956453001,
      "f1_gu_yn,binary_yn": 0.047058823529411764,
      "f1_gu_yn_stderr,binary_yn": "N/A",
      "recall_gu_yn,binary_yn": 0.4,
      "recall_gu_yn_stderr,binary_yn": "N/A"
    },
    "ehrshot_new_diagnosis_liver_cancer_gu": {
      "alias": " - ehrshot_new_diagnosis_liver_cancer_gu",
      "exact_match,binary_yn": 0.9885057471264368,
      "exact_match_stderr,binary_yn": 0.004043314941804711,
      "f1_gu_yn,binary_yn": 0.2,
      "f1_gu_yn_stderr,binary_yn": "N/A",
      "recall_gu_yn,binary_yn": 0.125,
      "recall_gu_yn_stderr,binary_yn": "N/A"
    },
    "ehrshot_new_diagnosis_lung_cancer_gu": {
      "alias": " - ehrshot_new_diagnosis_lung_cancer_gu",
      "exact_match,binary_yn": 0.9855907780979827,
      "exact_match_stderr,binary_yn": 0.004526911071285207,
      "f1_gu_yn,binary_yn": 0.0,
      "f1_gu_yn_stderr,binary_yn": "N/A",
      "recall_gu_yn,binary_yn": 0.0,
      "recall_gu_yn_stderr,binary_yn": "N/A"
    },
    "ehrshot_new_diagnosis_lupus_gu": {
      "alias": " - ehrshot_new_diagnosis_lupus_gu",
      "exact_match,binary_yn": 0.9885714285714285,
      "exact_match_stderr,binary_yn": 0.0040203273170600845,
      "f1_gu_yn,binary_yn": 0.0,
      "f1_gu_yn_stderr,binary_yn": "N/A",
      "recall_gu_yn,binary_yn": 0.0,
      "recall_gu_yn_stderr,binary_yn": "N/A"
    },
    "ehrshot_new_diagnosis_obesity_gu": {
      "alias": " - ehrshot_new_diagnosis_obesity_gu",
      "exact_match,binary_yn": 0.9671848013816926,
      "exact_match_stderr,binary_yn": 0.007410172723279649,
      "f1_gu_yn,binary_yn": 0.0,
      "f1_gu_yn_stderr,binary_yn": "N/A",
      "recall_gu_yn,binary_yn": 0.0,
      "recall_gu_yn_stderr,binary_yn": "N/A"
    },
    "ehrshot_new_diagnosis_pancreatic_cancer_gu": {
      "alias": " - ehrshot_new_diagnosis_pancreatic_cancer_gu",
      "exact_match,binary_yn": 0.9928774928774928,
      "exact_match_stderr,binary_yn": 0.0031761811948615216,
      "f1_gu_yn,binary_yn": 0.2857142857142857,
      "f1_gu_yn_stderr,binary_yn": "N/A",
      "recall_gu_yn,binary_yn": 0.2,
      "recall_gu_yn_stderr,binary_yn": "N/A"
    },
    "ehrshot_new_diagnosis_prostate_cancer_gu": {
      "alias": " - ehrshot_new_diagnosis_prostate_cancer_gu",
      "exact_match,binary_yn": 0.995768688293371,
      "exact_match_stderr,binary_yn": 0.0024394960197396164,
      "f1_gu_yn,binary_yn": 0.0,
      "f1_gu_yn_stderr,binary_yn": "N/A",
      "recall_gu_yn,binary_yn": 0.0,
      "recall_gu_yn_stderr,binary_yn": "N/A"
    },
    "ehrshot_new_diagnosis_type_ii_diabetes_gu": {
      "alias": " - ehrshot_new_diagnosis_type_ii_diabetes_gu",
      "exact_match,binary_yn": 0.925476603119584,
      "exact_match_stderr,binary_yn": 0.010942531398126879,
      "f1_gu_yn,binary_yn": 0.0851063829787234,
      "f1_gu_yn_stderr,binary_yn": "N/A",
      "recall_gu_yn,binary_yn": 0.1111111111111111,
      "recall_gu_yn_stderr,binary_yn": "N/A"
    }
  },
  "groups": {
    "group_ehrshot_new_diagnosis_tasks_gu": {
      "exact_match,binary_yn": 0.9567013585445301,
      "exact_match_stderr,binary_yn": 0.0017826892429844347,
      "f1_gu_yn,binary_yn": 0.06208202448817392,
      "f1_gu_yn_stderr,binary_yn": "N/A",
      "recall_gu_yn,binary_yn": 0.0771875812544219,
      "recall_gu_yn_stderr,binary_yn": "N/A",
      "alias": "group_ehrshot_new_diagnosis_tasks_gu"
    }
  },
  "group_subtasks": {
    "group_ehrshot_new_diagnosis_tasks_gu": [
      "ehrshot_new_diagnosis_acute_myocardial_infarction_gu",
      "ehrshot_new_diagnosis_asthma_gu",
      "ehrshot_new_diagnosis_breast_cancer_gu",
      "ehrshot_new_diagnosis_chronic_kidney_disease_gu",
      "ehrshot_new_diagnosis_chronic_obstructive_pulmonary_disease_gu",
      "ehrshot_new_diagnosis_coronary_arteriosclerosis_gu",
      "ehrshot_new_diagnosis_dementia_gu",
      "ehrshot_new_diagnosis_depressive_disorder_gu",
      "ehrshot_new_diagnosis_heart_failure_gu",
      "ehrshot_new_diagnosis_hyperlipidemia_gu",
      "ehrshot_new_diagnosis_hypertension_gu",
      "ehrshot_new_diagnosis_intestinal_cancer_gu",
      "ehrshot_new_diagnosis_ischemic_stroke_gu",
      "ehrshot_new_diagnosis_liver_cancer_gu",
      "ehrshot_new_diagnosis_lung_cancer_gu",
      "ehrshot_new_diagnosis_lupus_gu",
      "ehrshot_new_diagnosis_obesity_gu",
      "ehrshot_new_diagnosis_pancreatic_cancer_gu",
      "ehrshot_new_diagnosis_prostate_cancer_gu",
      "ehrshot_new_diagnosis_type_ii_diabetes_gu"
    ]
  },
  "configs": {
    "ehrshot_new_diagnosis_acute_myocardial_infarction_gu": {
      "task": "ehrshot_new_diagnosis_acute_myocardial_infarction_gu",
      "dataset_path": "parquet",
      "dataset_kwargs": {
        "data_files": {
          "test": "/home/yl2342/project_pi_hx235/yl2342/data/ehrshot/visit_oriented_ehr/task_diagnosis/task_diagnosis_test/*.parquet"
        }
      },
      "test_split": "test",
      "process_docs": "def filter_new_cases_acute_myocardial_infarction(dataset):\n    return filter_new_cases(dataset, condition_name=\"acute_myocardial_infarction\")\n",
      "doc_to_text": "def doc_to_text_acute_myocardial_infarction(doc):\n    return doc_to_text(doc, condition_name=\"acute_myocardial_infarction\")\n",
      "doc_to_target": "def doc_to_target_acute_myocardial_infarction(doc):\n    return doc_to_target(doc, condition_name=\"acute_myocardial_infarction\")\n",
      "unsafe_code": false,
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "exact_match",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "f1_gu_yn",
          "aggregation": "f1",
          "higher_is_better": true
        },
        {
          "metric": "recall_gu_yn",
          "aggregation": "recall",
          "higher_is_better": true
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "<im_end>"
        ],
        "max_gen_toks": 2048,
        "do_sample": false,
        "temperature": 0.0
      },
      "repeats": 1,
      "filter_list": [
        {
          "name": "binary_yn",
          "filter": [
            {
              "function": "remove_whitespace"
            },
            {
              "function": "lowercase"
            },
            {
              "function": "regex",
              "regex_pattern": "(?s)\\b(yes|no)\\b",
              "group_select": 0,
              "fallback": "no"
            },
            {
              "function": "map",
              "mapping_dict": {
                "yes": "Yes",
                "no": "No"
              },
              "default_value": "No"
            },
            {
              "function": "take_first"
            }
          ]
        }
      ],
      "should_decontaminate": false,
      "metadata": {
        "description": "EHR-based NEW acute myocardial infarction diagnosis prediction: predict 1-year risk of first-ever Acute myocardial infarction diagnosis for patients with no prior history",
        "pretrained": "Qwen/Qwen3-8B",
        "tensor_parallel_size": 1,
        "data_parallel_size": 1,
        "dtype": "bfloat16",
        "max_model_len": "4096",
        "gpu_memory_utilization": 0.8,
        "enable_thinking": true,
        "think_end_token": "</think>",
        "model_name": "Qwen/Qwen3-8B",
        "task_name": "diagnosis_new"
      }
    },
    "ehrshot_new_diagnosis_asthma_gu": {
      "task": "ehrshot_new_diagnosis_asthma_gu",
      "dataset_path": "parquet",
      "dataset_kwargs": {
        "data_files": {
          "test": "/home/yl2342/project_pi_hx235/yl2342/data/ehrshot/visit_oriented_ehr/task_diagnosis/task_diagnosis_test/*.parquet"
        }
      },
      "test_split": "test",
      "process_docs": "def filter_new_cases_asthma(dataset):\n    return filter_new_cases(dataset, condition_name=\"asthma\")\n",
      "doc_to_text": "def doc_to_text_asthma(doc):\n    return doc_to_text(doc, condition_name=\"asthma\")\n",
      "doc_to_target": "def doc_to_target_asthma(doc):\n    return doc_to_target(doc, condition_name=\"asthma\")\n",
      "unsafe_code": false,
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "exact_match",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "f1_gu_yn",
          "aggregation": "f1",
          "higher_is_better": true
        },
        {
          "metric": "recall_gu_yn",
          "aggregation": "recall",
          "higher_is_better": true
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "<im_end>"
        ],
        "max_gen_toks": 2048,
        "do_sample": false,
        "temperature": 0.0
      },
      "repeats": 1,
      "filter_list": [
        {
          "name": "binary_yn",
          "filter": [
            {
              "function": "remove_whitespace"
            },
            {
              "function": "lowercase"
            },
            {
              "function": "regex",
              "regex_pattern": "(?s)\\b(yes|no)\\b",
              "group_select": 0,
              "fallback": "no"
            },
            {
              "function": "map",
              "mapping_dict": {
                "yes": "Yes",
                "no": "No"
              },
              "default_value": "No"
            },
            {
              "function": "take_first"
            }
          ]
        }
      ],
      "should_decontaminate": false,
      "metadata": {
        "description": "EHR-based NEW asthma diagnosis prediction: predict 1-year risk of first-ever Asthma diagnosis for patients with no prior history",
        "pretrained": "Qwen/Qwen3-8B",
        "tensor_parallel_size": 1,
        "data_parallel_size": 1,
        "dtype": "bfloat16",
        "max_model_len": "4096",
        "gpu_memory_utilization": 0.8,
        "enable_thinking": true,
        "think_end_token": "</think>",
        "model_name": "Qwen/Qwen3-8B",
        "task_name": "diagnosis_new"
      }
    },
    "ehrshot_new_diagnosis_breast_cancer_gu": {
      "task": "ehrshot_new_diagnosis_breast_cancer_gu",
      "dataset_path": "parquet",
      "dataset_kwargs": {
        "data_files": {
          "test": "/home/yl2342/project_pi_hx235/yl2342/data/ehrshot/visit_oriented_ehr/task_diagnosis/task_diagnosis_test/*.parquet"
        }
      },
      "test_split": "test",
      "process_docs": "def filter_new_cases_breast_cancer(dataset):\n    return filter_new_cases(dataset, condition_name=\"breast_cancer\")\n",
      "doc_to_text": "def doc_to_text_breast_cancer(doc):\n    return doc_to_text(doc, condition_name=\"breast_cancer\")\n",
      "doc_to_target": "def doc_to_target_breast_cancer(doc):\n    return doc_to_target(doc, condition_name=\"breast_cancer\")\n",
      "unsafe_code": false,
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "exact_match",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "f1_gu_yn",
          "aggregation": "f1",
          "higher_is_better": true
        },
        {
          "metric": "recall_gu_yn",
          "aggregation": "recall",
          "higher_is_better": true
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "<im_end>"
        ],
        "max_gen_toks": 2048,
        "do_sample": false,
        "temperature": 0.0
      },
      "repeats": 1,
      "filter_list": [
        {
          "name": "binary_yn",
          "filter": [
            {
              "function": "remove_whitespace"
            },
            {
              "function": "lowercase"
            },
            {
              "function": "regex",
              "regex_pattern": "(?s)\\b(yes|no)\\b",
              "group_select": 0,
              "fallback": "no"
            },
            {
              "function": "map",
              "mapping_dict": {
                "yes": "Yes",
                "no": "No"
              },
              "default_value": "No"
            },
            {
              "function": "take_first"
            }
          ]
        }
      ],
      "should_decontaminate": false,
      "metadata": {
        "description": "EHR-based NEW breast cancer diagnosis prediction: predict 1-year risk of first-ever Malignant tumor of breast diagnosis for patients with no prior history",
        "pretrained": "Qwen/Qwen3-8B",
        "tensor_parallel_size": 1,
        "data_parallel_size": 1,
        "dtype": "bfloat16",
        "max_model_len": "4096",
        "gpu_memory_utilization": 0.8,
        "enable_thinking": true,
        "think_end_token": "</think>",
        "model_name": "Qwen/Qwen3-8B",
        "task_name": "diagnosis_new"
      }
    },
    "ehrshot_new_diagnosis_chronic_kidney_disease_gu": {
      "task": "ehrshot_new_diagnosis_chronic_kidney_disease_gu",
      "dataset_path": "parquet",
      "dataset_kwargs": {
        "data_files": {
          "test": "/home/yl2342/project_pi_hx235/yl2342/data/ehrshot/visit_oriented_ehr/task_diagnosis/task_diagnosis_test/*.parquet"
        }
      },
      "test_split": "test",
      "process_docs": "def filter_new_cases_chronic_kidney_disease(dataset):\n    return filter_new_cases(dataset, condition_name=\"chronic_kidney_disease\")\n",
      "doc_to_text": "def doc_to_text_chronic_kidney_disease(doc):\n    return doc_to_text(doc, condition_name=\"chronic_kidney_disease\")\n",
      "doc_to_target": "def doc_to_target_chronic_kidney_disease(doc):\n    return doc_to_target(doc, condition_name=\"chronic_kidney_disease\")\n",
      "unsafe_code": false,
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "exact_match",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "f1_gu_yn",
          "aggregation": "f1",
          "higher_is_better": true
        },
        {
          "metric": "recall_gu_yn",
          "aggregation": "recall",
          "higher_is_better": true
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "<im_end>"
        ],
        "max_gen_toks": 2048,
        "do_sample": false,
        "temperature": 0.0
      },
      "repeats": 1,
      "filter_list": [
        {
          "name": "binary_yn",
          "filter": [
            {
              "function": "remove_whitespace"
            },
            {
              "function": "lowercase"
            },
            {
              "function": "regex",
              "regex_pattern": "(?s)\\b(yes|no)\\b",
              "group_select": 0,
              "fallback": "no"
            },
            {
              "function": "map",
              "mapping_dict": {
                "yes": "Yes",
                "no": "No"
              },
              "default_value": "No"
            },
            {
              "function": "take_first"
            }
          ]
        }
      ],
      "should_decontaminate": false,
      "metadata": {
        "description": "EHR-based NEW chronic kidney disease diagnosis prediction: predict 1-year risk of first-ever Chronic kidney disease diagnosis for patients with no prior history",
        "pretrained": "Qwen/Qwen3-8B",
        "tensor_parallel_size": 1,
        "data_parallel_size": 1,
        "dtype": "bfloat16",
        "max_model_len": "4096",
        "gpu_memory_utilization": 0.8,
        "enable_thinking": true,
        "think_end_token": "</think>",
        "model_name": "Qwen/Qwen3-8B",
        "task_name": "diagnosis_new"
      }
    },
    "ehrshot_new_diagnosis_chronic_obstructive_pulmonary_disease_gu": {
      "task": "ehrshot_new_diagnosis_chronic_obstructive_pulmonary_disease_gu",
      "dataset_path": "parquet",
      "dataset_kwargs": {
        "data_files": {
          "test": "/home/yl2342/project_pi_hx235/yl2342/data/ehrshot/visit_oriented_ehr/task_diagnosis/task_diagnosis_test/*.parquet"
        }
      },
      "test_split": "test",
      "process_docs": "def filter_new_cases_chronic_obstructive_pulmonary_disease(dataset):\n    return filter_new_cases(dataset, condition_name=\"chronic_obstructive_pulmonary_disease\")\n",
      "doc_to_text": "def doc_to_text_chronic_obstructive_pulmonary_disease(doc):\n    return doc_to_text(doc, condition_name=\"chronic_obstructive_pulmonary_disease\")\n",
      "doc_to_target": "def doc_to_target_chronic_obstructive_pulmonary_disease(doc):\n    return doc_to_target(doc, condition_name=\"chronic_obstructive_pulmonary_disease\")\n",
      "unsafe_code": false,
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "exact_match",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "f1_gu_yn",
          "aggregation": "f1",
          "higher_is_better": true
        },
        {
          "metric": "recall_gu_yn",
          "aggregation": "recall",
          "higher_is_better": true
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "<im_end>"
        ],
        "max_gen_toks": 2048,
        "do_sample": false,
        "temperature": 0.0
      },
      "repeats": 1,
      "filter_list": [
        {
          "name": "binary_yn",
          "filter": [
            {
              "function": "remove_whitespace"
            },
            {
              "function": "lowercase"
            },
            {
              "function": "regex",
              "regex_pattern": "(?s)\\b(yes|no)\\b",
              "group_select": 0,
              "fallback": "no"
            },
            {
              "function": "map",
              "mapping_dict": {
                "yes": "Yes",
                "no": "No"
              },
              "default_value": "No"
            },
            {
              "function": "take_first"
            }
          ]
        }
      ],
      "should_decontaminate": false,
      "metadata": {
        "description": "EHR-based NEW chronic obstructive pulmonary disease diagnosis prediction: predict 1-year risk of first-ever Chronic obstructive pulmonary disease diagnosis for patients with no prior history",
        "pretrained": "Qwen/Qwen3-8B",
        "tensor_parallel_size": 1,
        "data_parallel_size": 1,
        "dtype": "bfloat16",
        "max_model_len": "4096",
        "gpu_memory_utilization": 0.8,
        "enable_thinking": true,
        "think_end_token": "</think>",
        "model_name": "Qwen/Qwen3-8B",
        "task_name": "diagnosis_new"
      }
    },
    "ehrshot_new_diagnosis_coronary_arteriosclerosis_gu": {
      "task": "ehrshot_new_diagnosis_coronary_arteriosclerosis_gu",
      "dataset_path": "parquet",
      "dataset_kwargs": {
        "data_files": {
          "test": "/home/yl2342/project_pi_hx235/yl2342/data/ehrshot/visit_oriented_ehr/task_diagnosis/task_diagnosis_test/*.parquet"
        }
      },
      "test_split": "test",
      "process_docs": "def filter_new_cases_coronary_arteriosclerosis(dataset):\n    return filter_new_cases(dataset, condition_name=\"coronary_arteriosclerosis\")\n",
      "doc_to_text": "def doc_to_text_coronary_arteriosclerosis(doc):\n    return doc_to_text(doc, condition_name=\"coronary_arteriosclerosis\")\n",
      "doc_to_target": "def doc_to_target_coronary_arteriosclerosis(doc):\n    return doc_to_target(doc, condition_name=\"coronary_arteriosclerosis\")\n",
      "unsafe_code": false,
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "exact_match",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "f1_gu_yn",
          "aggregation": "f1",
          "higher_is_better": true
        },
        {
          "metric": "recall_gu_yn",
          "aggregation": "recall",
          "higher_is_better": true
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "<im_end>"
        ],
        "max_gen_toks": 2048,
        "do_sample": false,
        "temperature": 0.0
      },
      "repeats": 1,
      "filter_list": [
        {
          "name": "binary_yn",
          "filter": [
            {
              "function": "remove_whitespace"
            },
            {
              "function": "lowercase"
            },
            {
              "function": "regex",
              "regex_pattern": "(?s)\\b(yes|no)\\b",
              "group_select": 0,
              "fallback": "no"
            },
            {
              "function": "map",
              "mapping_dict": {
                "yes": "Yes",
                "no": "No"
              },
              "default_value": "No"
            },
            {
              "function": "take_first"
            }
          ]
        }
      ],
      "should_decontaminate": false,
      "metadata": {
        "description": "EHR-based NEW coronary arteriosclerosis diagnosis prediction: predict 1-year risk of first-ever Coronary arteriosclerosis diagnosis for patients with no prior history",
        "pretrained": "Qwen/Qwen3-8B",
        "tensor_parallel_size": 1,
        "data_parallel_size": 1,
        "dtype": "bfloat16",
        "max_model_len": "4096",
        "gpu_memory_utilization": 0.8,
        "enable_thinking": true,
        "think_end_token": "</think>",
        "model_name": "Qwen/Qwen3-8B",
        "task_name": "diagnosis_new"
      }
    },
    "ehrshot_new_diagnosis_dementia_gu": {
      "task": "ehrshot_new_diagnosis_dementia_gu",
      "dataset_path": "parquet",
      "dataset_kwargs": {
        "data_files": {
          "test": "/home/yl2342/project_pi_hx235/yl2342/data/ehrshot/visit_oriented_ehr/task_diagnosis/task_diagnosis_test/*.parquet"
        }
      },
      "test_split": "test",
      "process_docs": "def filter_new_cases_dementia(dataset):\n    return filter_new_cases(dataset, condition_name=\"dementia\")\n",
      "doc_to_text": "def doc_to_text_dementia(doc):\n    return doc_to_text(doc, condition_name=\"dementia\")\n",
      "doc_to_target": "def doc_to_target_dementia(doc):\n    return doc_to_target(doc, condition_name=\"dementia\")\n",
      "unsafe_code": false,
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "exact_match",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "f1_gu_yn",
          "aggregation": "f1",
          "higher_is_better": true
        },
        {
          "metric": "recall_gu_yn",
          "aggregation": "recall",
          "higher_is_better": true
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "<im_end>"
        ],
        "max_gen_toks": 2048,
        "do_sample": false,
        "temperature": 0.0
      },
      "repeats": 1,
      "filter_list": [
        {
          "name": "binary_yn",
          "filter": [
            {
              "function": "remove_whitespace"
            },
            {
              "function": "lowercase"
            },
            {
              "function": "regex",
              "regex_pattern": "(?s)\\b(yes|no)\\b",
              "group_select": 0,
              "fallback": "no"
            },
            {
              "function": "map",
              "mapping_dict": {
                "yes": "Yes",
                "no": "No"
              },
              "default_value": "No"
            },
            {
              "function": "take_first"
            }
          ]
        }
      ],
      "should_decontaminate": false,
      "metadata": {
        "description": "EHR-based NEW dementia diagnosis prediction: predict 1-year risk of first-ever Dementia diagnosis for patients with no prior history",
        "pretrained": "Qwen/Qwen3-8B",
        "tensor_parallel_size": 1,
        "data_parallel_size": 1,
        "dtype": "bfloat16",
        "max_model_len": "4096",
        "gpu_memory_utilization": 0.8,
        "enable_thinking": true,
        "think_end_token": "</think>",
        "model_name": "Qwen/Qwen3-8B",
        "task_name": "diagnosis_new"
      }
    },
    "ehrshot_new_diagnosis_depressive_disorder_gu": {
      "task": "ehrshot_new_diagnosis_depressive_disorder_gu",
      "dataset_path": "parquet",
      "dataset_kwargs": {
        "data_files": {
          "test": "/home/yl2342/project_pi_hx235/yl2342/data/ehrshot/visit_oriented_ehr/task_diagnosis/task_diagnosis_test/*.parquet"
        }
      },
      "test_split": "test",
      "process_docs": "def filter_new_cases_depressive_disorder(dataset):\n    return filter_new_cases(dataset, condition_name=\"depressive_disorder\")\n",
      "doc_to_text": "def doc_to_text_depressive_disorder(doc):\n    return doc_to_text(doc, condition_name=\"depressive_disorder\")\n",
      "doc_to_target": "def doc_to_target_depressive_disorder(doc):\n    return doc_to_target(doc, condition_name=\"depressive_disorder\")\n",
      "unsafe_code": false,
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "exact_match",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "f1_gu_yn",
          "aggregation": "f1",
          "higher_is_better": true
        },
        {
          "metric": "recall_gu_yn",
          "aggregation": "recall",
          "higher_is_better": true
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "<im_end>"
        ],
        "max_gen_toks": 2048,
        "do_sample": false,
        "temperature": 0.0
      },
      "repeats": 1,
      "filter_list": [
        {
          "name": "binary_yn",
          "filter": [
            {
              "function": "remove_whitespace"
            },
            {
              "function": "lowercase"
            },
            {
              "function": "regex",
              "regex_pattern": "(?s)\\b(yes|no)\\b",
              "group_select": 0,
              "fallback": "no"
            },
            {
              "function": "map",
              "mapping_dict": {
                "yes": "Yes",
                "no": "No"
              },
              "default_value": "No"
            },
            {
              "function": "take_first"
            }
          ]
        }
      ],
      "should_decontaminate": false,
      "metadata": {
        "description": "EHR-based NEW depressive disorder diagnosis prediction: predict 1-year risk of first-ever Depressive disorder diagnosis for patients with no prior history",
        "pretrained": "Qwen/Qwen3-8B",
        "tensor_parallel_size": 1,
        "data_parallel_size": 1,
        "dtype": "bfloat16",
        "max_model_len": "4096",
        "gpu_memory_utilization": 0.8,
        "enable_thinking": true,
        "think_end_token": "</think>",
        "model_name": "Qwen/Qwen3-8B",
        "task_name": "diagnosis_new"
      }
    },
    "ehrshot_new_diagnosis_heart_failure_gu": {
      "task": "ehrshot_new_diagnosis_heart_failure_gu",
      "dataset_path": "parquet",
      "dataset_kwargs": {
        "data_files": {
          "test": "/home/yl2342/project_pi_hx235/yl2342/data/ehrshot/visit_oriented_ehr/task_diagnosis/task_diagnosis_test/*.parquet"
        }
      },
      "test_split": "test",
      "process_docs": "def filter_new_cases_heart_failure(dataset):\n    return filter_new_cases(dataset, condition_name=\"heart_failure\")\n",
      "doc_to_text": "def doc_to_text_heart_failure(doc):\n    return doc_to_text(doc, condition_name=\"heart_failure\")\n",
      "doc_to_target": "def doc_to_target_heart_failure(doc):\n    return doc_to_target(doc, condition_name=\"heart_failure\")\n",
      "unsafe_code": false,
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "exact_match",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "f1_gu_yn",
          "aggregation": "f1",
          "higher_is_better": true
        },
        {
          "metric": "recall_gu_yn",
          "aggregation": "recall",
          "higher_is_better": true
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "<im_end>"
        ],
        "max_gen_toks": 2048,
        "do_sample": false,
        "temperature": 0.0
      },
      "repeats": 1,
      "filter_list": [
        {
          "name": "binary_yn",
          "filter": [
            {
              "function": "remove_whitespace"
            },
            {
              "function": "lowercase"
            },
            {
              "function": "regex",
              "regex_pattern": "(?s)\\b(yes|no)\\b",
              "group_select": 0,
              "fallback": "no"
            },
            {
              "function": "map",
              "mapping_dict": {
                "yes": "Yes",
                "no": "No"
              },
              "default_value": "No"
            },
            {
              "function": "take_first"
            }
          ]
        }
      ],
      "should_decontaminate": false,
      "metadata": {
        "description": "EHR-based NEW heart failure diagnosis prediction: predict 1-year risk of first-ever Heart failure diagnosis for patients with no prior history",
        "pretrained": "Qwen/Qwen3-8B",
        "tensor_parallel_size": 1,
        "data_parallel_size": 1,
        "dtype": "bfloat16",
        "max_model_len": "4096",
        "gpu_memory_utilization": 0.8,
        "enable_thinking": true,
        "think_end_token": "</think>",
        "model_name": "Qwen/Qwen3-8B",
        "task_name": "diagnosis_new"
      }
    },
    "ehrshot_new_diagnosis_hyperlipidemia_gu": {
      "task": "ehrshot_new_diagnosis_hyperlipidemia_gu",
      "dataset_path": "parquet",
      "dataset_kwargs": {
        "data_files": {
          "test": "/home/yl2342/project_pi_hx235/yl2342/data/ehrshot/visit_oriented_ehr/task_diagnosis/task_diagnosis_test/*.parquet"
        }
      },
      "test_split": "test",
      "process_docs": "def filter_new_cases_hyperlipidemia(dataset):\n    return filter_new_cases(dataset, condition_name=\"hyperlipidemia\")\n",
      "doc_to_text": "def doc_to_text_hyperlipidemia(doc):\n    return doc_to_text(doc, condition_name=\"hyperlipidemia\")\n",
      "doc_to_target": "def doc_to_target_hyperlipidemia(doc):\n    return doc_to_target(doc, condition_name=\"hyperlipidemia\")\n",
      "unsafe_code": false,
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "exact_match",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "f1_gu_yn",
          "aggregation": "f1",
          "higher_is_better": true
        },
        {
          "metric": "recall_gu_yn",
          "aggregation": "recall",
          "higher_is_better": true
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "<im_end>"
        ],
        "max_gen_toks": 2048,
        "do_sample": false,
        "temperature": 0.0
      },
      "repeats": 1,
      "filter_list": [
        {
          "name": "binary_yn",
          "filter": [
            {
              "function": "remove_whitespace"
            },
            {
              "function": "lowercase"
            },
            {
              "function": "regex",
              "regex_pattern": "(?s)\\b(yes|no)\\b",
              "group_select": 0,
              "fallback": "no"
            },
            {
              "function": "map",
              "mapping_dict": {
                "yes": "Yes",
                "no": "No"
              },
              "default_value": "No"
            },
            {
              "function": "take_first"
            }
          ]
        }
      ],
      "should_decontaminate": false,
      "metadata": {
        "description": "EHR-based NEW hyperlipidemia diagnosis prediction: predict 1-year risk of first-ever Hyperlipidemia diagnosis for patients with no prior history",
        "pretrained": "Qwen/Qwen3-8B",
        "tensor_parallel_size": 1,
        "data_parallel_size": 1,
        "dtype": "bfloat16",
        "max_model_len": "4096",
        "gpu_memory_utilization": 0.8,
        "enable_thinking": true,
        "think_end_token": "</think>",
        "model_name": "Qwen/Qwen3-8B",
        "task_name": "diagnosis_new"
      }
    },
    "ehrshot_new_diagnosis_hypertension_gu": {
      "task": "ehrshot_new_diagnosis_hypertension_gu",
      "dataset_path": "parquet",
      "dataset_kwargs": {
        "data_files": {
          "test": "/home/yl2342/project_pi_hx235/yl2342/data/ehrshot/visit_oriented_ehr/task_diagnosis/task_diagnosis_test/*.parquet"
        }
      },
      "test_split": "test",
      "process_docs": "def filter_new_cases_hypertension(dataset):\n    return filter_new_cases(dataset, condition_name=\"hypertension\")\n",
      "doc_to_text": "def doc_to_text_hypertension(doc):\n    return doc_to_text(doc, condition_name=\"hypertension\")\n",
      "doc_to_target": "def doc_to_target_hypertension(doc):\n    return doc_to_target(doc, condition_name=\"hypertension\")\n",
      "unsafe_code": false,
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "exact_match",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "f1_gu_yn",
          "aggregation": "f1",
          "higher_is_better": true
        },
        {
          "metric": "recall_gu_yn",
          "aggregation": "recall",
          "higher_is_better": true
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "<im_end>"
        ],
        "max_gen_toks": 2048,
        "do_sample": false,
        "temperature": 0.0
      },
      "repeats": 1,
      "filter_list": [
        {
          "name": "binary_yn",
          "filter": [
            {
              "function": "remove_whitespace"
            },
            {
              "function": "lowercase"
            },
            {
              "function": "regex",
              "regex_pattern": "(?s)\\b(yes|no)\\b",
              "group_select": 0,
              "fallback": "no"
            },
            {
              "function": "map",
              "mapping_dict": {
                "yes": "Yes",
                "no": "No"
              },
              "default_value": "No"
            },
            {
              "function": "take_first"
            }
          ]
        }
      ],
      "should_decontaminate": false,
      "metadata": {
        "description": "EHR-based NEW hypertension diagnosis prediction: predict 1-year risk of first-ever Essential hypertension diagnosis for patients with no prior history",
        "pretrained": "Qwen/Qwen3-8B",
        "tensor_parallel_size": 1,
        "data_parallel_size": 1,
        "dtype": "bfloat16",
        "max_model_len": "4096",
        "gpu_memory_utilization": 0.8,
        "enable_thinking": true,
        "think_end_token": "</think>",
        "model_name": "Qwen/Qwen3-8B",
        "task_name": "diagnosis_new"
      }
    },
    "ehrshot_new_diagnosis_intestinal_cancer_gu": {
      "task": "ehrshot_new_diagnosis_intestinal_cancer_gu",
      "dataset_path": "parquet",
      "dataset_kwargs": {
        "data_files": {
          "test": "/home/yl2342/project_pi_hx235/yl2342/data/ehrshot/visit_oriented_ehr/task_diagnosis/task_diagnosis_test/*.parquet"
        }
      },
      "test_split": "test",
      "process_docs": "def filter_new_cases_intestinal_cancer(dataset):\n    return filter_new_cases(dataset, condition_name=\"intestinal_cancer\")\n",
      "doc_to_text": "def doc_to_text_intestinal_cancer(doc):\n    return doc_to_text(doc, condition_name=\"intestinal_cancer\")\n",
      "doc_to_target": "def doc_to_target_intestinal_cancer(doc):\n    return doc_to_target(doc, condition_name=\"intestinal_cancer\")\n",
      "unsafe_code": false,
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "exact_match",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "f1_gu_yn",
          "aggregation": "f1",
          "higher_is_better": true
        },
        {
          "metric": "recall_gu_yn",
          "aggregation": "recall",
          "higher_is_better": true
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "<im_end>"
        ],
        "max_gen_toks": 2048,
        "do_sample": false,
        "temperature": 0.0
      },
      "repeats": 1,
      "filter_list": [
        {
          "name": "binary_yn",
          "filter": [
            {
              "function": "remove_whitespace"
            },
            {
              "function": "lowercase"
            },
            {
              "function": "regex",
              "regex_pattern": "(?s)\\b(yes|no)\\b",
              "group_select": 0,
              "fallback": "no"
            },
            {
              "function": "map",
              "mapping_dict": {
                "yes": "Yes",
                "no": "No"
              },
              "default_value": "No"
            },
            {
              "function": "take_first"
            }
          ]
        }
      ],
      "should_decontaminate": false,
      "metadata": {
        "description": "EHR-based NEW intestinal cancer diagnosis prediction: predict 1-year risk of first-ever Malignant tumor of intestine diagnosis for patients with no prior history",
        "pretrained": "Qwen/Qwen3-8B",
        "tensor_parallel_size": 1,
        "data_parallel_size": 1,
        "dtype": "bfloat16",
        "max_model_len": "4096",
        "gpu_memory_utilization": 0.8,
        "enable_thinking": true,
        "think_end_token": "</think>",
        "model_name": "Qwen/Qwen3-8B",
        "task_name": "diagnosis_new"
      }
    },
    "ehrshot_new_diagnosis_ischemic_stroke_gu": {
      "task": "ehrshot_new_diagnosis_ischemic_stroke_gu",
      "dataset_path": "parquet",
      "dataset_kwargs": {
        "data_files": {
          "test": "/home/yl2342/project_pi_hx235/yl2342/data/ehrshot/visit_oriented_ehr/task_diagnosis/task_diagnosis_test/*.parquet"
        }
      },
      "test_split": "test",
      "process_docs": "def filter_new_cases_ischemic_stroke(dataset):\n    return filter_new_cases(dataset, condition_name=\"ischemic_stroke\")\n",
      "doc_to_text": "def doc_to_text_ischemic_stroke(doc):\n    return doc_to_text(doc, condition_name=\"ischemic_stroke\")\n",
      "doc_to_target": "def doc_to_target_ischemic_stroke(doc):\n    return doc_to_target(doc, condition_name=\"ischemic_stroke\")\n",
      "unsafe_code": false,
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "exact_match",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "f1_gu_yn",
          "aggregation": "f1",
          "higher_is_better": true
        },
        {
          "metric": "recall_gu_yn",
          "aggregation": "recall",
          "higher_is_better": true
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "<im_end>"
        ],
        "max_gen_toks": 2048,
        "do_sample": false,
        "temperature": 0.0
      },
      "repeats": 1,
      "filter_list": [
        {
          "name": "binary_yn",
          "filter": [
            {
              "function": "remove_whitespace"
            },
            {
              "function": "lowercase"
            },
            {
              "function": "regex",
              "regex_pattern": "(?s)\\b(yes|no)\\b",
              "group_select": 0,
              "fallback": "no"
            },
            {
              "function": "map",
              "mapping_dict": {
                "yes": "Yes",
                "no": "No"
              },
              "default_value": "No"
            },
            {
              "function": "take_first"
            }
          ]
        }
      ],
      "should_decontaminate": false,
      "metadata": {
        "description": "EHR-based NEW ischemic stroke diagnosis prediction: predict 1-year risk of first-ever Cerebral infarction diagnosis for patients with no prior history",
        "pretrained": "Qwen/Qwen3-8B",
        "tensor_parallel_size": 1,
        "data_parallel_size": 1,
        "dtype": "bfloat16",
        "max_model_len": "4096",
        "gpu_memory_utilization": 0.8,
        "enable_thinking": true,
        "think_end_token": "</think>",
        "model_name": "Qwen/Qwen3-8B",
        "task_name": "diagnosis_new"
      }
    },
    "ehrshot_new_diagnosis_liver_cancer_gu": {
      "task": "ehrshot_new_diagnosis_liver_cancer_gu",
      "dataset_path": "parquet",
      "dataset_kwargs": {
        "data_files": {
          "test": "/home/yl2342/project_pi_hx235/yl2342/data/ehrshot/visit_oriented_ehr/task_diagnosis/task_diagnosis_test/*.parquet"
        }
      },
      "test_split": "test",
      "process_docs": "def filter_new_cases_liver_cancer(dataset):\n    return filter_new_cases(dataset, condition_name=\"liver_cancer\")\n",
      "doc_to_text": "def doc_to_text_liver_cancer(doc):\n    return doc_to_text(doc, condition_name=\"liver_cancer\")\n",
      "doc_to_target": "def doc_to_target_liver_cancer(doc):\n    return doc_to_target(doc, condition_name=\"liver_cancer\")\n",
      "unsafe_code": false,
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "exact_match",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "f1_gu_yn",
          "aggregation": "f1",
          "higher_is_better": true
        },
        {
          "metric": "recall_gu_yn",
          "aggregation": "recall",
          "higher_is_better": true
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "<im_end>"
        ],
        "max_gen_toks": 2048,
        "do_sample": false,
        "temperature": 0.0
      },
      "repeats": 1,
      "filter_list": [
        {
          "name": "binary_yn",
          "filter": [
            {
              "function": "remove_whitespace"
            },
            {
              "function": "lowercase"
            },
            {
              "function": "regex",
              "regex_pattern": "(?s)\\b(yes|no)\\b",
              "group_select": 0,
              "fallback": "no"
            },
            {
              "function": "map",
              "mapping_dict": {
                "yes": "Yes",
                "no": "No"
              },
              "default_value": "No"
            },
            {
              "function": "take_first"
            }
          ]
        }
      ],
      "should_decontaminate": false,
      "metadata": {
        "description": "EHR-based NEW liver cancer diagnosis prediction: predict 1-year risk of first-ever Malignant tumor of liver diagnosis for patients with no prior history",
        "pretrained": "Qwen/Qwen3-8B",
        "tensor_parallel_size": 1,
        "data_parallel_size": 1,
        "dtype": "bfloat16",
        "max_model_len": "4096",
        "gpu_memory_utilization": 0.8,
        "enable_thinking": true,
        "think_end_token": "</think>",
        "model_name": "Qwen/Qwen3-8B",
        "task_name": "diagnosis_new"
      }
    },
    "ehrshot_new_diagnosis_lung_cancer_gu": {
      "task": "ehrshot_new_diagnosis_lung_cancer_gu",
      "dataset_path": "parquet",
      "dataset_kwargs": {
        "data_files": {
          "test": "/home/yl2342/project_pi_hx235/yl2342/data/ehrshot/visit_oriented_ehr/task_diagnosis/task_diagnosis_test/*.parquet"
        }
      },
      "test_split": "test",
      "process_docs": "def filter_new_cases_lung_cancer(dataset):\n    return filter_new_cases(dataset, condition_name=\"lung_cancer\")\n",
      "doc_to_text": "def doc_to_text_lung_cancer(doc):\n    return doc_to_text(doc, condition_name=\"lung_cancer\")\n",
      "doc_to_target": "def doc_to_target_lung_cancer(doc):\n    return doc_to_target(doc, condition_name=\"lung_cancer\")\n",
      "unsafe_code": false,
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "exact_match",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "f1_gu_yn",
          "aggregation": "f1",
          "higher_is_better": true
        },
        {
          "metric": "recall_gu_yn",
          "aggregation": "recall",
          "higher_is_better": true
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "<im_end>"
        ],
        "max_gen_toks": 2048,
        "do_sample": false,
        "temperature": 0.0
      },
      "repeats": 1,
      "filter_list": [
        {
          "name": "binary_yn",
          "filter": [
            {
              "function": "remove_whitespace"
            },
            {
              "function": "lowercase"
            },
            {
              "function": "regex",
              "regex_pattern": "(?s)\\b(yes|no)\\b",
              "group_select": 0,
              "fallback": "no"
            },
            {
              "function": "map",
              "mapping_dict": {
                "yes": "Yes",
                "no": "No"
              },
              "default_value": "No"
            },
            {
              "function": "take_first"
            }
          ]
        }
      ],
      "should_decontaminate": false,
      "metadata": {
        "description": "EHR-based NEW lung cancer diagnosis prediction: predict 1-year risk of first-ever Malignant tumor of lung diagnosis for patients with no prior history",
        "pretrained": "Qwen/Qwen3-8B",
        "tensor_parallel_size": 1,
        "data_parallel_size": 1,
        "dtype": "bfloat16",
        "max_model_len": "4096",
        "gpu_memory_utilization": 0.8,
        "enable_thinking": true,
        "think_end_token": "</think>",
        "model_name": "Qwen/Qwen3-8B",
        "task_name": "diagnosis_new"
      }
    },
    "ehrshot_new_diagnosis_lupus_gu": {
      "task": "ehrshot_new_diagnosis_lupus_gu",
      "dataset_path": "parquet",
      "dataset_kwargs": {
        "data_files": {
          "test": "/home/yl2342/project_pi_hx235/yl2342/data/ehrshot/visit_oriented_ehr/task_diagnosis/task_diagnosis_test/*.parquet"
        }
      },
      "test_split": "test",
      "process_docs": "def filter_new_cases_lupus(dataset):\n    return filter_new_cases(dataset, condition_name=\"lupus\")\n",
      "doc_to_text": "def doc_to_text_lupus(doc):\n    return doc_to_text(doc, condition_name=\"lupus\")\n",
      "doc_to_target": "def doc_to_target_lupus(doc):\n    return doc_to_target(doc, condition_name=\"lupus\")\n",
      "unsafe_code": false,
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "exact_match",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "f1_gu_yn",
          "aggregation": "f1",
          "higher_is_better": true
        },
        {
          "metric": "recall_gu_yn",
          "aggregation": "recall",
          "higher_is_better": true
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "<im_end>"
        ],
        "max_gen_toks": 2048,
        "do_sample": false,
        "temperature": 0.0
      },
      "repeats": 1,
      "filter_list": [
        {
          "name": "binary_yn",
          "filter": [
            {
              "function": "remove_whitespace"
            },
            {
              "function": "lowercase"
            },
            {
              "function": "regex",
              "regex_pattern": "(?s)\\b(yes|no)\\b",
              "group_select": 0,
              "fallback": "no"
            },
            {
              "function": "map",
              "mapping_dict": {
                "yes": "Yes",
                "no": "No"
              },
              "default_value": "No"
            },
            {
              "function": "take_first"
            }
          ]
        }
      ],
      "should_decontaminate": false,
      "metadata": {
        "description": "EHR-based NEW lupus diagnosis prediction: predict 1-year risk of first-ever Systemic lupus erythematosus diagnosis for patients with no prior history",
        "pretrained": "Qwen/Qwen3-8B",
        "tensor_parallel_size": 1,
        "data_parallel_size": 1,
        "dtype": "bfloat16",
        "max_model_len": "4096",
        "gpu_memory_utilization": 0.8,
        "enable_thinking": true,
        "think_end_token": "</think>",
        "model_name": "Qwen/Qwen3-8B",
        "task_name": "diagnosis_new"
      }
    },
    "ehrshot_new_diagnosis_obesity_gu": {
      "task": "ehrshot_new_diagnosis_obesity_gu",
      "dataset_path": "parquet",
      "dataset_kwargs": {
        "data_files": {
          "test": "/home/yl2342/project_pi_hx235/yl2342/data/ehrshot/visit_oriented_ehr/task_diagnosis/task_diagnosis_test/*.parquet"
        }
      },
      "test_split": "test",
      "process_docs": "def filter_new_cases_obesity(dataset):\n    return filter_new_cases(dataset, condition_name=\"obesity\")\n",
      "doc_to_text": "def doc_to_text_obesity(doc):\n    return doc_to_text(doc, condition_name=\"obesity\")\n",
      "doc_to_target": "def doc_to_target_obesity(doc):\n    return doc_to_target(doc, condition_name=\"obesity\")\n",
      "unsafe_code": false,
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "exact_match",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "f1_gu_yn",
          "aggregation": "f1",
          "higher_is_better": true
        },
        {
          "metric": "recall_gu_yn",
          "aggregation": "recall",
          "higher_is_better": true
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "<im_end>"
        ],
        "max_gen_toks": 2048,
        "do_sample": false,
        "temperature": 0.0
      },
      "repeats": 1,
      "filter_list": [
        {
          "name": "binary_yn",
          "filter": [
            {
              "function": "remove_whitespace"
            },
            {
              "function": "lowercase"
            },
            {
              "function": "regex",
              "regex_pattern": "(?s)\\b(yes|no)\\b",
              "group_select": 0,
              "fallback": "no"
            },
            {
              "function": "map",
              "mapping_dict": {
                "yes": "Yes",
                "no": "No"
              },
              "default_value": "No"
            },
            {
              "function": "take_first"
            }
          ]
        }
      ],
      "should_decontaminate": false,
      "metadata": {
        "description": "EHR-based NEW obesity diagnosis prediction: predict 1-year risk of first-ever Obesity diagnosis for patients with no prior history",
        "pretrained": "Qwen/Qwen3-8B",
        "tensor_parallel_size": 1,
        "data_parallel_size": 1,
        "dtype": "bfloat16",
        "max_model_len": "4096",
        "gpu_memory_utilization": 0.8,
        "enable_thinking": true,
        "think_end_token": "</think>",
        "model_name": "Qwen/Qwen3-8B",
        "task_name": "diagnosis_new"
      }
    },
    "ehrshot_new_diagnosis_pancreatic_cancer_gu": {
      "task": "ehrshot_new_diagnosis_pancreatic_cancer_gu",
      "dataset_path": "parquet",
      "dataset_kwargs": {
        "data_files": {
          "test": "/home/yl2342/project_pi_hx235/yl2342/data/ehrshot/visit_oriented_ehr/task_diagnosis/task_diagnosis_test/*.parquet"
        }
      },
      "test_split": "test",
      "process_docs": "def filter_new_cases_pancreatic_cancer(dataset):\n    return filter_new_cases(dataset, condition_name=\"pancreatic_cancer\")\n",
      "doc_to_text": "def doc_to_text_pancreatic_cancer(doc):\n    return doc_to_text(doc, condition_name=\"pancreatic_cancer\")\n",
      "doc_to_target": "def doc_to_target_pancreatic_cancer(doc):\n    return doc_to_target(doc, condition_name=\"pancreatic_cancer\")\n",
      "unsafe_code": false,
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "exact_match",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "f1_gu_yn",
          "aggregation": "f1",
          "higher_is_better": true
        },
        {
          "metric": "recall_gu_yn",
          "aggregation": "recall",
          "higher_is_better": true
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "<im_end>"
        ],
        "max_gen_toks": 2048,
        "do_sample": false,
        "temperature": 0.0
      },
      "repeats": 1,
      "filter_list": [
        {
          "name": "binary_yn",
          "filter": [
            {
              "function": "remove_whitespace"
            },
            {
              "function": "lowercase"
            },
            {
              "function": "regex",
              "regex_pattern": "(?s)\\b(yes|no)\\b",
              "group_select": 0,
              "fallback": "no"
            },
            {
              "function": "map",
              "mapping_dict": {
                "yes": "Yes",
                "no": "No"
              },
              "default_value": "No"
            },
            {
              "function": "take_first"
            }
          ]
        }
      ],
      "should_decontaminate": false,
      "metadata": {
        "description": "EHR-based NEW pancreatic cancer diagnosis prediction: predict 1-year risk of first-ever Malignant tumor of pancreas diagnosis for patients with no prior history",
        "pretrained": "Qwen/Qwen3-8B",
        "tensor_parallel_size": 1,
        "data_parallel_size": 1,
        "dtype": "bfloat16",
        "max_model_len": "4096",
        "gpu_memory_utilization": 0.8,
        "enable_thinking": true,
        "think_end_token": "</think>",
        "model_name": "Qwen/Qwen3-8B",
        "task_name": "diagnosis_new"
      }
    },
    "ehrshot_new_diagnosis_prostate_cancer_gu": {
      "task": "ehrshot_new_diagnosis_prostate_cancer_gu",
      "dataset_path": "parquet",
      "dataset_kwargs": {
        "data_files": {
          "test": "/home/yl2342/project_pi_hx235/yl2342/data/ehrshot/visit_oriented_ehr/task_diagnosis/task_diagnosis_test/*.parquet"
        }
      },
      "test_split": "test",
      "process_docs": "def filter_new_cases_prostate_cancer(dataset):\n    return filter_new_cases(dataset, condition_name=\"prostate_cancer\")\n",
      "doc_to_text": "def doc_to_text_prostate_cancer(doc):\n    return doc_to_text(doc, condition_name=\"prostate_cancer\")\n",
      "doc_to_target": "def doc_to_target_prostate_cancer(doc):\n    return doc_to_target(doc, condition_name=\"prostate_cancer\")\n",
      "unsafe_code": false,
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "exact_match",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "f1_gu_yn",
          "aggregation": "f1",
          "higher_is_better": true
        },
        {
          "metric": "recall_gu_yn",
          "aggregation": "recall",
          "higher_is_better": true
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "<im_end>"
        ],
        "max_gen_toks": 2048,
        "do_sample": false,
        "temperature": 0.0
      },
      "repeats": 1,
      "filter_list": [
        {
          "name": "binary_yn",
          "filter": [
            {
              "function": "remove_whitespace"
            },
            {
              "function": "lowercase"
            },
            {
              "function": "regex",
              "regex_pattern": "(?s)\\b(yes|no)\\b",
              "group_select": 0,
              "fallback": "no"
            },
            {
              "function": "map",
              "mapping_dict": {
                "yes": "Yes",
                "no": "No"
              },
              "default_value": "No"
            },
            {
              "function": "take_first"
            }
          ]
        }
      ],
      "should_decontaminate": false,
      "metadata": {
        "description": "EHR-based NEW prostate cancer diagnosis prediction: predict 1-year risk of first-ever Malignant tumor of prostate diagnosis for patients with no prior history",
        "pretrained": "Qwen/Qwen3-8B",
        "tensor_parallel_size": 1,
        "data_parallel_size": 1,
        "dtype": "bfloat16",
        "max_model_len": "4096",
        "gpu_memory_utilization": 0.8,
        "enable_thinking": true,
        "think_end_token": "</think>",
        "model_name": "Qwen/Qwen3-8B",
        "task_name": "diagnosis_new"
      }
    },
    "ehrshot_new_diagnosis_type_ii_diabetes_gu": {
      "task": "ehrshot_new_diagnosis_type_ii_diabetes_gu",
      "dataset_path": "parquet",
      "dataset_kwargs": {
        "data_files": {
          "test": "/home/yl2342/project_pi_hx235/yl2342/data/ehrshot/visit_oriented_ehr/task_diagnosis/task_diagnosis_test/*.parquet"
        }
      },
      "test_split": "test",
      "process_docs": "def filter_new_cases_type_ii_diabetes(dataset):\n    return filter_new_cases(dataset, condition_name=\"type_ii_diabetes\")\n",
      "doc_to_text": "def doc_to_text_type_ii_diabetes(doc):\n    return doc_to_text(doc, condition_name=\"type_ii_diabetes\")\n",
      "doc_to_target": "def doc_to_target_type_ii_diabetes(doc):\n    return doc_to_target(doc, condition_name=\"type_ii_diabetes\")\n",
      "unsafe_code": false,
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "exact_match",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "f1_gu_yn",
          "aggregation": "f1",
          "higher_is_better": true
        },
        {
          "metric": "recall_gu_yn",
          "aggregation": "recall",
          "higher_is_better": true
        }
      ],
      "output_type": "generate_until",
      "generation_kwargs": {
        "until": [
          "<im_end>"
        ],
        "max_gen_toks": 2048,
        "do_sample": false,
        "temperature": 0.0
      },
      "repeats": 1,
      "filter_list": [
        {
          "name": "binary_yn",
          "filter": [
            {
              "function": "remove_whitespace"
            },
            {
              "function": "lowercase"
            },
            {
              "function": "regex",
              "regex_pattern": "(?s)\\b(yes|no)\\b",
              "group_select": 0,
              "fallback": "no"
            },
            {
              "function": "map",
              "mapping_dict": {
                "yes": "Yes",
                "no": "No"
              },
              "default_value": "No"
            },
            {
              "function": "take_first"
            }
          ]
        }
      ],
      "should_decontaminate": false,
      "metadata": {
        "description": "EHR-based NEW type ii diabetes diagnosis prediction: predict 1-year risk of first-ever Type 2 diabetes mellitus diagnosis for patients with no prior history",
        "pretrained": "Qwen/Qwen3-8B",
        "tensor_parallel_size": 1,
        "data_parallel_size": 1,
        "dtype": "bfloat16",
        "max_model_len": "4096",
        "gpu_memory_utilization": 0.8,
        "enable_thinking": true,
        "think_end_token": "</think>",
        "model_name": "Qwen/Qwen3-8B",
        "task_name": "diagnosis_new"
      }
    }
  },
  "versions": {
    "ehrshot_new_diagnosis_acute_myocardial_infarction_gu": "Yaml",
    "ehrshot_new_diagnosis_asthma_gu": "Yaml",
    "ehrshot_new_diagnosis_breast_cancer_gu": "Yaml",
    "ehrshot_new_diagnosis_chronic_kidney_disease_gu": "Yaml",
    "ehrshot_new_diagnosis_chronic_obstructive_pulmonary_disease_gu": "Yaml",
    "ehrshot_new_diagnosis_coronary_arteriosclerosis_gu": "Yaml",
    "ehrshot_new_diagnosis_dementia_gu": "Yaml",
    "ehrshot_new_diagnosis_depressive_disorder_gu": "Yaml",
    "ehrshot_new_diagnosis_heart_failure_gu": "Yaml",
    "ehrshot_new_diagnosis_hyperlipidemia_gu": "Yaml",
    "ehrshot_new_diagnosis_hypertension_gu": "Yaml",
    "ehrshot_new_diagnosis_intestinal_cancer_gu": "Yaml",
    "ehrshot_new_diagnosis_ischemic_stroke_gu": "Yaml",
    "ehrshot_new_diagnosis_liver_cancer_gu": "Yaml",
    "ehrshot_new_diagnosis_lung_cancer_gu": "Yaml",
    "ehrshot_new_diagnosis_lupus_gu": "Yaml",
    "ehrshot_new_diagnosis_obesity_gu": "Yaml",
    "ehrshot_new_diagnosis_pancreatic_cancer_gu": "Yaml",
    "ehrshot_new_diagnosis_prostate_cancer_gu": "Yaml",
    "ehrshot_new_diagnosis_type_ii_diabetes_gu": "Yaml",
    "group_ehrshot_new_diagnosis_tasks_gu": 1.0
  },
  "n-shot": {
    "ehrshot_new_diagnosis_acute_myocardial_infarction_gu": 0,
    "ehrshot_new_diagnosis_asthma_gu": 0,
    "ehrshot_new_diagnosis_breast_cancer_gu": 0,
    "ehrshot_new_diagnosis_chronic_kidney_disease_gu": 0,
    "ehrshot_new_diagnosis_chronic_obstructive_pulmonary_disease_gu": 0,
    "ehrshot_new_diagnosis_coronary_arteriosclerosis_gu": 0,
    "ehrshot_new_diagnosis_dementia_gu": 0,
    "ehrshot_new_diagnosis_depressive_disorder_gu": 0,
    "ehrshot_new_diagnosis_heart_failure_gu": 0,
    "ehrshot_new_diagnosis_hyperlipidemia_gu": 0,
    "ehrshot_new_diagnosis_hypertension_gu": 0,
    "ehrshot_new_diagnosis_intestinal_cancer_gu": 0,
    "ehrshot_new_diagnosis_ischemic_stroke_gu": 0,
    "ehrshot_new_diagnosis_liver_cancer_gu": 0,
    "ehrshot_new_diagnosis_lung_cancer_gu": 0,
    "ehrshot_new_diagnosis_lupus_gu": 0,
    "ehrshot_new_diagnosis_obesity_gu": 0,
    "ehrshot_new_diagnosis_pancreatic_cancer_gu": 0,
    "ehrshot_new_diagnosis_prostate_cancer_gu": 0,
    "ehrshot_new_diagnosis_type_ii_diabetes_gu": 0
  },
  "higher_is_better": {
    "ehrshot_new_diagnosis_acute_myocardial_infarction_gu": {
      "exact_match": true,
      "f1_gu_yn": true,
      "recall_gu_yn": true
    },
    "ehrshot_new_diagnosis_asthma_gu": {
      "exact_match": true,
      "f1_gu_yn": true,
      "recall_gu_yn": true
    },
    "ehrshot_new_diagnosis_breast_cancer_gu": {
      "exact_match": true,
      "f1_gu_yn": true,
      "recall_gu_yn": true
    },
    "ehrshot_new_diagnosis_chronic_kidney_disease_gu": {
      "exact_match": true,
      "f1_gu_yn": true,
      "recall_gu_yn": true
    },
    "ehrshot_new_diagnosis_chronic_obstructive_pulmonary_disease_gu": {
      "exact_match": true,
      "f1_gu_yn": true,
      "recall_gu_yn": true
    },
    "ehrshot_new_diagnosis_coronary_arteriosclerosis_gu": {
      "exact_match": true,
      "f1_gu_yn": true,
      "recall_gu_yn": true
    },
    "ehrshot_new_diagnosis_dementia_gu": {
      "exact_match": true,
      "f1_gu_yn": true,
      "recall_gu_yn": true
    },
    "ehrshot_new_diagnosis_depressive_disorder_gu": {
      "exact_match": true,
      "f1_gu_yn": true,
      "recall_gu_yn": true
    },
    "ehrshot_new_diagnosis_heart_failure_gu": {
      "exact_match": true,
      "f1_gu_yn": true,
      "recall_gu_yn": true
    },
    "ehrshot_new_diagnosis_hyperlipidemia_gu": {
      "exact_match": true,
      "f1_gu_yn": true,
      "recall_gu_yn": true
    },
    "ehrshot_new_diagnosis_hypertension_gu": {
      "exact_match": true,
      "f1_gu_yn": true,
      "recall_gu_yn": true
    },
    "ehrshot_new_diagnosis_intestinal_cancer_gu": {
      "exact_match": true,
      "f1_gu_yn": true,
      "recall_gu_yn": true
    },
    "ehrshot_new_diagnosis_ischemic_stroke_gu": {
      "exact_match": true,
      "f1_gu_yn": true,
      "recall_gu_yn": true
    },
    "ehrshot_new_diagnosis_liver_cancer_gu": {
      "exact_match": true,
      "f1_gu_yn": true,
      "recall_gu_yn": true
    },
    "ehrshot_new_diagnosis_lung_cancer_gu": {
      "exact_match": true,
      "f1_gu_yn": true,
      "recall_gu_yn": true
    },
    "ehrshot_new_diagnosis_lupus_gu": {
      "exact_match": true,
      "f1_gu_yn": true,
      "recall_gu_yn": true
    },
    "ehrshot_new_diagnosis_obesity_gu": {
      "exact_match": true,
      "f1_gu_yn": true,
      "recall_gu_yn": true
    },
    "ehrshot_new_diagnosis_pancreatic_cancer_gu": {
      "exact_match": true,
      "f1_gu_yn": true,
      "recall_gu_yn": true
    },
    "ehrshot_new_diagnosis_prostate_cancer_gu": {
      "exact_match": true,
      "f1_gu_yn": true,
      "recall_gu_yn": true
    },
    "ehrshot_new_diagnosis_type_ii_diabetes_gu": {
      "exact_match": true,
      "f1_gu_yn": true,
      "recall_gu_yn": true
    },
    "group_ehrshot_new_diagnosis_tasks_gu": {
      "exact_match": true,
      "f1_gu_yn": true,
      "recall_gu_yn": true
    }
  },
  "n-samples": {
    "ehrshot_new_diagnosis_acute_myocardial_infarction_gu": {
      "original": 682,
      "effective": 682
    },
    "ehrshot_new_diagnosis_asthma_gu": {
      "original": 620,
      "effective": 620
    },
    "ehrshot_new_diagnosis_breast_cancer_gu": {
      "original": 691,
      "effective": 691
    },
    "ehrshot_new_diagnosis_chronic_kidney_disease_gu": {
      "original": 586,
      "effective": 586
    },
    "ehrshot_new_diagnosis_chronic_obstructive_pulmonary_disease_gu": {
      "original": 655,
      "effective": 655
    },
    "ehrshot_new_diagnosis_coronary_arteriosclerosis_gu": {
      "original": 605,
      "effective": 605
    },
    "ehrshot_new_diagnosis_dementia_gu": {
      "original": 712,
      "effective": 712
    },
    "ehrshot_new_diagnosis_depressive_disorder_gu": {
      "original": 582,
      "effective": 582
    },
    "ehrshot_new_diagnosis_heart_failure_gu": {
      "original": 617,
      "effective": 617
    },
    "ehrshot_new_diagnosis_hyperlipidemia_gu": {
      "original": 413,
      "effective": 413
    },
    "ehrshot_new_diagnosis_hypertension_gu": {
      "original": 373,
      "effective": 373
    },
    "ehrshot_new_diagnosis_intestinal_cancer_gu": {
      "original": 699,
      "effective": 699
    },
    "ehrshot_new_diagnosis_ischemic_stroke_gu": {
      "original": 695,
      "effective": 695
    },
    "ehrshot_new_diagnosis_liver_cancer_gu": {
      "original": 696,
      "effective": 696
    },
    "ehrshot_new_diagnosis_lung_cancer_gu": {
      "original": 694,
      "effective": 694
    },
    "ehrshot_new_diagnosis_lupus_gu": {
      "original": 700,
      "effective": 700
    },
    "ehrshot_new_diagnosis_obesity_gu": {
      "original": 579,
      "effective": 579
    },
    "ehrshot_new_diagnosis_pancreatic_cancer_gu": {
      "original": 702,
      "effective": 702
    },
    "ehrshot_new_diagnosis_prostate_cancer_gu": {
      "original": 709,
      "effective": 709
    },
    "ehrshot_new_diagnosis_type_ii_diabetes_gu": {
      "original": 577,
      "effective": 577
    }
  },
  "config": {
    "model": "vllm",
    "model_args": "pretrained=Qwen/Qwen3-8B,tensor_parallel_size=1,data_parallel_size=1,dtype=bfloat16,max_model_len=4096,gpu_memory_utilization=0.8,enable_thinking=True,think_end_token=</think>",
    "batch_size": "auto",
    "batch_sizes": [],
    "device": null,
    "use_cache": null,
    "limit": null,
    "bootstrap_iters": 100000,
    "gen_kwargs": null,
    "random_seed": 0,
    "numpy_seed": 1234,
    "torch_seed": 1234,
    "fewshot_seed": 1234
  },
  "git_hash": "33d7c956",
  "date": 1758184738.5549123,
  "pretty_env_info": "PyTorch version: 2.6.0+cu124\nIs debug build: False\nCUDA used to build PyTorch: 12.4\nROCM used to build PyTorch: N/A\n\nOS: Red Hat Enterprise Linux release 8.10 (Ootpa) (x86_64)\nGCC version: (GCC) 8.5.0 20210514 (Red Hat 8.5.0-26)\nClang version: Could not collect\nCMake version: Could not collect\nLibc version: glibc-2.28\n\nPython version: 3.12.11 | packaged by conda-forge | (main, Jun  4 2025, 14:45:31) [GCC 13.3.0] (64-bit runtime)\nPython platform: Linux-4.18.0-553.52.1.el8_10.x86_64-x86_64-with-glibc2.28\nIs CUDA available: True\nCUDA runtime version: Could not collect\nCUDA_MODULE_LOADING set to: LAZY\nGPU models and configuration: GPU 0: NVIDIA H200\nNvidia driver version: 570.133.20\ncuDNN version: Could not collect\nHIP runtime version: N/A\nMIOpen runtime version: N/A\nIs XNNPACK available: True\n\nCPU:\nArchitecture:        x86_64\nCPU op-mode(s):      32-bit, 64-bit\nByte Order:          Little Endian\nCPU(s):              48\nOn-line CPU(s) list: 0-47\nThread(s) per core:  1\nCore(s) per socket:  24\nSocket(s):           2\nNUMA node(s):        2\nVendor ID:           GenuineIntel\nCPU family:          6\nModel:               207\nModel name:          INTEL(R) XEON(R) GOLD 6542Y\nStepping:            2\nCPU MHz:             3600.000\nCPU max MHz:         4100.0000\nCPU min MHz:         800.0000\nBogoMIPS:            5800.00\nL1d cache:           48K\nL1i cache:           32K\nL2 cache:            2048K\nL3 cache:            61440K\nNUMA node0 CPU(s):   0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40,42,44,46\nNUMA node1 CPU(s):   1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31,33,35,37,39,41,43,45,47\nFlags:               fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf tsc_known_freq pni pclmulqdq dtes64 monitor ds_cpl smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid dca sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb cat_l3 cat_l2 cdp_l3 invpcid_single cdp_l2 ssbd mba ibrs ibpb stibp ibrs_enhanced fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid cqm rdt_a avx512f avx512dq rdseed adx smap avx512ifma clflushopt clwb intel_pt avx512cd sha_ni avx512bw avx512vl xsaveopt xsavec xgetbv1 xsaves cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local split_lock_detect avx_vnni avx512_bf16 wbnoinvd dtherm ida arat pln pts hfi avx512vbmi umip pku ospke waitpkg avx512_vbmi2 gfni vaes vpclmulqdq avx512_vnni avx512_bitalg tme avx512_vpopcntdq la57 rdpid bus_lock_detect cldemote movdiri movdir64b enqcmd fsrm md_clear serialize tsxldtrk pconfig arch_lbr amx_bf16 avx512_fp16 amx_tile amx_int8 flush_l1d arch_capabilities\n\nVersions of relevant libraries:\n[pip3] numpy==2.2.6\n[pip3] nvidia-cublas-cu12==12.4.5.8\n[pip3] nvidia-cuda-cupti-cu12==12.4.127\n[pip3] nvidia-cuda-nvrtc-cu12==12.4.127\n[pip3] nvidia-cuda-runtime-cu12==12.4.127\n[pip3] nvidia-cudnn-cu12==9.1.0.70\n[pip3] nvidia-cufft-cu12==11.2.1.3\n[pip3] nvidia-curand-cu12==10.3.5.147\n[pip3] nvidia-cusolver-cu12==11.6.1.9\n[pip3] nvidia-cusparse-cu12==12.3.1.170\n[pip3] nvidia-cusparselt-cu12==0.6.2\n[pip3] nvidia-nccl-cu12==2.21.5\n[pip3] nvidia-nvjitlink-cu12==12.4.127\n[pip3] nvidia-nvtx-cu12==12.4.127\n[pip3] torch==2.6.0\n[pip3] torchaudio==2.6.0\n[pip3] torchvision==0.21.0\n[pip3] triton==3.2.0\n[conda] numpy                     2.2.6                    pypi_0    pypi\n[conda] nvidia-cublas-cu12        12.4.5.8                 pypi_0    pypi\n[conda] nvidia-cuda-cupti-cu12    12.4.127                 pypi_0    pypi\n[conda] nvidia-cuda-nvrtc-cu12    12.4.127                 pypi_0    pypi\n[conda] nvidia-cuda-runtime-cu12  12.4.127                 pypi_0    pypi\n[conda] nvidia-cudnn-cu12         9.1.0.70                 pypi_0    pypi\n[conda] nvidia-cufft-cu12         11.2.1.3                 pypi_0    pypi\n[conda] nvidia-curand-cu12        10.3.5.147               pypi_0    pypi\n[conda] nvidia-cusolver-cu12      11.6.1.9                 pypi_0    pypi\n[conda] nvidia-cusparse-cu12      12.3.1.170               pypi_0    pypi\n[conda] nvidia-cusparselt-cu12    0.6.2                    pypi_0    pypi\n[conda] nvidia-nccl-cu12          2.21.5                   pypi_0    pypi\n[conda] nvidia-nvjitlink-cu12     12.4.127                 pypi_0    pypi\n[conda] nvidia-nvtx-cu12          12.4.127                 pypi_0    pypi\n[conda] torch                     2.6.0                    pypi_0    pypi\n[conda] torchaudio                2.6.0                    pypi_0    pypi\n[conda] torchvision               0.21.0                   pypi_0    pypi\n[conda] triton                    3.2.0                    pypi_0    pypi",
  "transformers_version": "4.56.1",
  "lm_eval_version": "0.4.9.1",
  "upper_git_hash": null,
  "tokenizer_pad_token": [
    "<|endoftext|>",
    "151643"
  ],
  "tokenizer_eos_token": [
    "<|im_end|>",
    "151645"
  ],
  "tokenizer_bos_token": [
    null,
    "None"
  ],
  "eot_token_id": 151645,
  "max_length": 4096,
  "task_hashes": {},
  "model_source": "vllm",
  "model_name": "Qwen/Qwen3-8B",
  "model_name_sanitized": "Qwen__Qwen3-8B",
  "system_instruction": null,
  "system_instruction_sha": null,
  "fewshot_as_multiturn": false,
  "chat_template": "{%- if tools %}\n    {{- '<|im_start|>system\\n' }}\n    {%- if messages[0].role == 'system' %}\n        {{- messages[0].content + '\\n\\n' }}\n    {%- endif %}\n    {{- \"# Tools\\n\\nYou may call one or more functions to assist with the user query.\\n\\nYou are provided with function signatures within <tools></tools> XML tags:\\n<tools>\" }}\n    {%- for tool in tools %}\n        {{- \"\\n\" }}\n        {{- tool | tojson }}\n    {%- endfor %}\n    {{- \"\\n</tools>\\n\\nFor each function call, return a json object with function name and arguments within <tool_call></tool_call> XML tags:\\n<tool_call>\\n{\\\"name\\\": <function-name>, \\\"arguments\\\": <args-json-object>}\\n</tool_call><|im_end|>\\n\" }}\n{%- else %}\n    {%- if messages[0].role == 'system' %}\n        {{- '<|im_start|>system\\n' + messages[0].content + '<|im_end|>\\n' }}\n    {%- endif %}\n{%- endif %}\n{%- set ns = namespace(multi_step_tool=true, last_query_index=messages|length - 1) %}\n{%- for message in messages[::-1] %}\n    {%- set index = (messages|length - 1) - loop.index0 %}\n    {%- if ns.multi_step_tool and message.role == \"user\" and message.content is string and not(message.content.startswith('<tool_response>') and message.content.endswith('</tool_response>')) %}\n        {%- set ns.multi_step_tool = false %}\n        {%- set ns.last_query_index = index %}\n    {%- endif %}\n{%- endfor %}\n{%- for message in messages %}\n    {%- if message.content is string %}\n        {%- set content = message.content %}\n    {%- else %}\n        {%- set content = '' %}\n    {%- endif %}\n    {%- if (message.role == \"user\") or (message.role == \"system\" and not loop.first) %}\n        {{- '<|im_start|>' + message.role + '\\n' + content + '<|im_end|>' + '\\n' }}\n    {%- elif message.role == \"assistant\" %}\n        {%- set reasoning_content = '' %}\n        {%- if message.reasoning_content is string %}\n            {%- set reasoning_content = message.reasoning_content %}\n        {%- else %}\n            {%- if '</think>' in content %}\n                {%- set reasoning_content = content.split('</think>')[0].rstrip('\\n').split('<think>')[-1].lstrip('\\n') %}\n                {%- set content = content.split('</think>')[-1].lstrip('\\n') %}\n            {%- endif %}\n        {%- endif %}\n        {%- if loop.index0 > ns.last_query_index %}\n            {%- if loop.last or (not loop.last and reasoning_content) %}\n                {{- '<|im_start|>' + message.role + '\\n<think>\\n' + reasoning_content.strip('\\n') + '\\n</think>\\n\\n' + content.lstrip('\\n') }}\n            {%- else %}\n                {{- '<|im_start|>' + message.role + '\\n' + content }}\n            {%- endif %}\n        {%- else %}\n            {{- '<|im_start|>' + message.role + '\\n' + content }}\n        {%- endif %}\n        {%- if message.tool_calls %}\n            {%- for tool_call in message.tool_calls %}\n                {%- if (loop.first and content) or (not loop.first) %}\n                    {{- '\\n' }}\n                {%- endif %}\n                {%- if tool_call.function %}\n                    {%- set tool_call = tool_call.function %}\n                {%- endif %}\n                {{- '<tool_call>\\n{\"name\": \"' }}\n                {{- tool_call.name }}\n                {{- '\", \"arguments\": ' }}\n                {%- if tool_call.arguments is string %}\n                    {{- tool_call.arguments }}\n                {%- else %}\n                    {{- tool_call.arguments | tojson }}\n                {%- endif %}\n                {{- '}\\n</tool_call>' }}\n            {%- endfor %}\n        {%- endif %}\n        {{- '<|im_end|>\\n' }}\n    {%- elif message.role == \"tool\" %}\n        {%- if loop.first or (messages[loop.index0 - 1].role != \"tool\") %}\n            {{- '<|im_start|>user' }}\n        {%- endif %}\n        {{- '\\n<tool_response>\\n' }}\n        {{- content }}\n        {{- '\\n</tool_response>' }}\n        {%- if loop.last or (messages[loop.index0 + 1].role != \"tool\") %}\n            {{- '<|im_end|>\\n' }}\n        {%- endif %}\n    {%- endif %}\n{%- endfor %}\n{%- if add_generation_prompt %}\n    {{- '<|im_start|>assistant\\n' }}\n    {%- if enable_thinking is defined and enable_thinking is false %}\n        {{- '<think>\\n\\n</think>\\n\\n' }}\n    {%- endif %}\n{%- endif %}",
  "chat_template_sha": "a55ee1b1660128b7098723e0abcd92caa0788061051c62d51cbe87d9cf1974d8",
  "start_time": 6661797.183702809,
  "end_time": 6663205.641836318,
  "total_evaluation_time_seconds": "1408.4581335093826"
}